import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

export const categorySeedData = [
  // Categories for savory_food (‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≤‡∏ß)
  {
    food_type_key: 'savory_food',
    key: 'rice_dishes',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Rice Dishes',
        description: 'Rice with toppings and rice-based meals',
      },
      {
        language: 'th',
        name: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏£‡∏≤‡∏î',
        description: '‡∏Ç‡πâ‡∏≤‡∏ß‡∏£‡∏≤‡∏î‡πÅ‡∏Å‡∏á ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß',
      },
      {
        language: 'jp',
        name: '„É©„Ç§„ÇπÊñôÁêÜ',
        description: '„ÅîÈ£Ø„ÇÇ„ÅÆÊñôÁêÜ„Å®„É©„Ç§„Çπ„Éô„Éº„Çπ„ÅÆÈ£ü‰∫ã',
      },
      {
        language: 'zh',
        name: 'Á±≥È•≠Á±ª',
        description: 'ÁõñÈ•≠ÂíåÁ±≥È•≠Á±ªËèúËÇ¥',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'noodles',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Noodles',
        description: 'Various types of noodle dishes',
      },
      {
        language: 'th',
        name: '‡πÄ‡∏™‡πâ‡∏ô',
        description: '‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß ‡∏ö‡∏∞‡∏´‡∏°‡∏µ‡πà ‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å',
      },
      {
        language: 'jp',
        name: 'È∫∫È°û',
        description: 'Êßò„ÄÖ„Å™È∫∫ÊñôÁêÜ',
      },
      {
        language: 'zh',
        name: 'Èù¢Êù°Á±ª',
        description: 'ÂêÑÁßçÈù¢Êù°ËèúËÇ¥',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'curry',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Curry',
        description: 'Thai curries and curry-based dishes',
      },
      {
        language: 'th',
        name: '‡πÅ‡∏Å‡∏á',
        description: '‡πÅ‡∏Å‡∏á‡πÄ‡∏ú‡πá‡∏î ‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô ‡πÅ‡∏Å‡∏á‡∏°‡∏±‡∏™‡∏°‡∏±‡πà‡∏ô',
      },
      {
        language: 'jp',
        name: '„Ç´„É¨„Éº',
        description: '„Çø„Ç§„Ç´„É¨„Éº„Å®„Ç´„É¨„Éº„Éô„Éº„Çπ„ÅÆÊñôÁêÜ',
      },
      {
        language: 'zh',
        name: 'ÂíñÂñ±Á±ª',
        description: 'Ê≥∞ÂºèÂíñÂñ±ÂíåÂíñÂñ±ËèúËÇ¥',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'stir_fry',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Stir Fry',
        description: 'Stir-fried dishes and wok cooking',
      },
      {
        language: 'th',
        name: '‡∏ú‡∏±‡∏î',
        description: '‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢ ‡∏ú‡∏±‡∏î‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß ‡∏ú‡∏±‡∏î‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤',
      },
      {
        language: 'jp',
        name: 'ÁÇí„ÇÅÁâ©',
        description: 'ÁÇí„ÇÅÊñôÁêÜ„Å®‰∏≠ËèØÈçãÊñôÁêÜ',
      },
      {
        language: 'zh',
        name: 'ÁÇíËèúÁ±ª',
        description: 'ÁÇíËèúÂíåÁÇíÊ≤≥Á≤âÁ≠â',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'soup',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Soup',
        description: 'Thai soups and broths',
      },
      {
        language: 'th',
        name: '‡∏ï‡πâ‡∏°',
        description: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥ ‡∏ï‡πâ‡∏°‡∏Ç‡πà‡∏≤ ‡∏ï‡πâ‡∏°‡∏à‡∏∑‡∏î',
      },
      {
        language: 'jp',
        name: '„Çπ„Éº„Éó',
        description: '„Çø„Ç§„ÅÆ„Çπ„Éº„ÉóÈ°û',
      },
      {
        language: 'zh',
        name: 'Ê±§Á±ª',
        description: 'Ê≥∞ÂºèÊ±§ÂìÅ',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'salad',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Salad',
        description: 'Thai salads and fresh dishes',
      },
      {
        language: 'th',
        name: '‡∏¢‡∏≥',
        description: '‡∏™‡πâ‡∏°‡∏ï‡∏≥ ‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô ‡∏•‡∏≤‡∏ö',
      },
      {
        language: 'jp',
        name: '„Çµ„É©„ÉÄ',
        description: '„Çø„Ç§È¢®„Çµ„É©„ÉÄ„Å®ÁîüÈáéËèúÊñôÁêÜ',
      },
      {
        language: 'zh',
        name: 'Ê≤ôÊãâÁ±ª',
        description: 'Ê≥∞ÂºèÊ≤ôÊãâÂíåÂáâËèú',
      },
    ],
  },
  {
    food_type_key: 'savory_food',
    key: 'grilled',
    is_active: true,
    translations: [
      {
        language: 'en',
        name: 'Grilled',
        description: 'Grilled and barbecued dishes',
      },
      {
        language: 'th',
        name: '‡∏¢‡πà‡∏≤‡∏á/‡πÄ‡∏ú‡∏≤',
        description: '‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á ‡∏´‡∏°‡∏π‡πÄ‡∏ú‡∏≤ ‡∏õ‡∏•‡∏≤‡πÄ‡∏ú‡∏≤',
      },
      {
        language: 'jp',
        name: 'ÁÑº„ÅçÁâ©',
        description: '„Ç∞„É™„É´ÊñôÁêÜ„Å®„Éê„Éº„Éô„Ç≠„É•„Éº',
      },
      {
        language: 'zh',
        name: 'ÁÉßÁÉ§Á±ª',
        description: 'ÁÉßÁÉ§ÂíåÁÉ§Âà∂ËèúËÇ¥',
      },
    ],
  },
];

export async function seedCategories() {
  console.log('üè∑Ô∏è Seeding categories...');
  
  for (const category of categorySeedData) {
    // Find the food type first
    const foodType = await prisma.foodType.findUnique({
      where: { key: category.food_type_key },
    });

    if (!foodType) {
      console.log(`‚ùå Food type not found: ${category.food_type_key}`);
      continue;
    }

    const existingCategory = await prisma.category.findUnique({
      where: { key: category.key },
    });

    if (existingCategory) {
      console.log(`‚ö†Ô∏è  Category already exists: ${category.key}`);
      continue;
    }

    const createdCategory = await prisma.category.create({
      data: {
        key: category.key,
        food_type_id: foodType.id,
        is_active: category.is_active,
        Translations: {
          create: category.translations,
        },
      },
      include: {
        Translations: true,
      },
    });
    
    console.log(`‚úÖ Created category: ${createdCategory.key}`);
  }
  
  console.log('üéâ Categories seeding completed!');
}

// Run if this file is executed directly
if (require.main === module) {
  seedCategories()
    .then(async () => {
      await prisma.$disconnect();
    })
    .catch(async (e) => {
      console.error('‚ùå Error seeding categories:', e);
      await prisma.$disconnect();
      process.exit(1);
    });
}